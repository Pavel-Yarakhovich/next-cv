{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/devpc/Documents/next-learn/pages/index.js\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { Flex } from \"@chakra-ui/react\";\nimport { MongoClient } from \"mongodb\";\nimport LeftColumn from \"../components/leftColumn\";\nimport Presentation from \"../components/presentation\";\nimport Toolkit from \"../components/toolkit\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Test meta description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      color: \"white\",\n      justifySelf: \"center\",\n      minHeight: \"100vh\",\n      direction: [\"column\", null, \"row\"],\n      mb: 5,\n      children: [/*#__PURE__*/_jsxDEV(LeftColumn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Presentation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolkit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: MOCK_MEETUP,\n//     },\n//   };\n// }\n// getStaticProps function is called before HomePage function\n// never executes on the client\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://Pasha:AQTc2sTLAD0jxa1w@node.lpsx9.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10 // in seconds\n\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/home/devpc/Documents/next-learn/pages/index.js"],"names":["Fragment","Head","Flex","MongoClient","LeftColumn","Presentation","Toolkit","HomePage","props","getStaticProps","client","connect","db","meetupsCollection","collection","meetups","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,IAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,WAAW,EAAC,QAFd;AAGE,MAAA,SAAS,EAAC,OAHZ;AAIE,MAAA,SAAS,EAAE,CAAC,QAAD,EAAW,IAAX,EAAiB,KAAjB,CAJb;AAKE,MAAA,EAAE,EAAE,CALN;AAAA,8BAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAiBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,iGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLO,MAAAA,OAAO,EAAEA,OAAO,CAACI,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFgB;AAGhCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHkB;AAIhCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE,EATP,CASW;;AATX,GAAP;AAWD;AAED,eAAepB,QAAf","sourcesContent":["import { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { Flex } from \"@chakra-ui/react\";\n\nimport { MongoClient } from \"mongodb\";\n\nimport LeftColumn from \"../components/leftColumn\";\nimport Presentation from \"../components/presentation\";\nimport Toolkit from \"../components/toolkit\";\n\nfunction HomePage(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>React Meetups</title>\n        <meta name=\"description\" content=\"Test meta description.\" />\n      </Head>\n\n      <Flex\n        color=\"white\"\n        justifySelf=\"center\"\n        minHeight=\"100vh\"\n        direction={[\"column\", null, \"row\"]}\n        mb={5}\n      >\n        <LeftColumn />\n        <Presentation />\n      </Flex>\n\n      <Toolkit />\n    </Fragment>\n  );\n}\n\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: MOCK_MEETUP,\n//     },\n//   };\n// }\n\n// getStaticProps function is called before HomePage function\n// never executes on the client\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Pasha:AQTc2sTLAD0jxa1w@node.lpsx9.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 10, // in seconds\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}