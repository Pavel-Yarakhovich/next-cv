{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/devpc/Documents/next-learn/pages/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst MOCK_MEETUP = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://i0.wp.com/passionpassport.com/wp-content/uploads/2018/01/explore-prague-Alejandro-Cruz.jpg?fit=1760%2C1175&ssl=1\",\n  address: \"Khoruzhei street 24, 220123, Minsk, Belarus\",\n  description: \"Минск – столица Беларуси и административный центр Минской области, расположенной в центральной части страны.\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://i0.wp.com/passionpassport.com/wp-content/uploads/2018/01/explore-prague-Alejandro-Cruz.jpg?fit=1760%2C1175&ssl=1\",\n  address: \"Khoruzhei street 24, 220123, Minsk, Belarus\",\n  description: \"Минск – столица Беларуси и административный центр Минской области, расположенной в центральной части страны.\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: MOCK_MEETUP,\n//     },\n//   };\n// }\n// getStaticProps function is called before HomePage function\n// never executes on the client\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://Pasha:AQTc2sTLAD0jxa1w@node.lpsx9.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10 // in seconds\n\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/home/devpc/Documents/next-learn/pages/index.js"],"names":["MongoClient","MeetupList","MOCK_MEETUP","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,0HAJJ;AAKEC,EAAAA,OAAO,EAAE,6CALX;AAMEC,EAAAA,WAAW,EACT;AAPJ,CADkB,EAUlB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,0HAJJ;AAKEC,EAAAA,OAAO,EAAE,6CALX;AAMEC,EAAAA,WAAW,EACT;AAPJ,CAVkB,CAApB;;AAqBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,iGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC9BjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADgB;AAE9BE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFc;AAG9BD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHgB;AAI9BF,QAAAA,EAAE,EAAEkB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAJ0B,OAAL,CAAlB;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE,EATP,CASW;;AATX,GAAP;AAWD;AAED,eAAehB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst MOCK_MEETUP = [\n  {\n    id: \"m1\",\n    title: \"A First Meetup\",\n    image:\n      \"https://i0.wp.com/passionpassport.com/wp-content/uploads/2018/01/explore-prague-Alejandro-Cruz.jpg?fit=1760%2C1175&ssl=1\",\n    address: \"Khoruzhei street 24, 220123, Minsk, Belarus\",\n    description:\n      \"Минск – столица Беларуси и административный центр Минской области, расположенной в центральной части страны.\",\n  },\n  {\n    id: \"m2\",\n    title: \"A Second Meetup\",\n    image:\n      \"https://i0.wp.com/passionpassport.com/wp-content/uploads/2018/01/explore-prague-Alejandro-Cruz.jpg?fit=1760%2C1175&ssl=1\",\n    address: \"Khoruzhei street 24, 220123, Minsk, Belarus\",\n    description:\n      \"Минск – столица Беларуси и административный центр Минской области, расположенной в центральной части страны.\",\n  },\n];\n\nfunction HomePage(props) {\n  return <MeetupList meetups={props.meetups} />;\n}\n\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: MOCK_MEETUP,\n//     },\n//   };\n// }\n\n// getStaticProps function is called before HomePage function\n// never executes on the client\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Pasha:AQTc2sTLAD0jxa1w@node.lpsx9.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      }))\n    },\n    revalidate: 10, // in seconds\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}